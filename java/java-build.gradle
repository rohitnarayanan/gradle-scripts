buildscript {
	repositories {
		jcenter()
		mavenLocal()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE"
	}
}

/*
 * Other plugins need to be applied via the plugin class as this script is included in other scripts
 */
apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin
apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin


repositories {
	jcenter()
	mavenLocal()
	mavenCentral()
}

def buildProps = new Properties()
new URL("https://raw.githubusercontent.com/rohitnarayanan/gradle-scripts/master/java/java-build.properties").withInputStream { buildProps.load(it) }
project.ext.javaVersion = buildProps.getProperty("version.java")
project.ext.springBootVersion = buildProps.getProperty("version.springboot")


/*
 * Compile config
 */
compileJava {
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
	
	options.compilerArgs += ["-Xlint:unchecked"]
}


/*
 * Test config
 */
test {
	useJUnitPlatform()
}

// enable jacoco reports
apply plugin: "jacoco"
test.finalizedBy jacocoTestReport

/*
 * java-library config
 */
project.plugins.withId("java-library") {
	bootJar {
		enabled = false
	}
	
	jar {
		enabled = true
		
		from (sourceSets.main.allSource) {
			include '**/*.java'
		}
		
		manifest {
			attributes (
				"Build-Version": project.ext.archiveVersion,
				"Build-Timestamp": new Date().format("yyyyMMdd-hhmmss.SSSZ"),
				"Build-Tool": "Gradle ${gradle.gradleVersion}",
				"Build-JDK" : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
				"Build-Platform" : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
				"Java-Source-Version": javaVersion,
				"Spring-Boot-Version": springBootVersion
			)
		}
	}
	
	// publish the artifact to maven
	apply plugin: "maven-publish"
	publishing {
		publications {
			mavenJava(MavenPublication) {
				groupId group
				artifactId project.name
				version archiveVersion
				from components.java
			}
		}
	}
	build.finalizedBy publishToMavenLocal
}


apply from: "https://raw.githubusercontent.com/rohitnarayanan/gradle-scripts/master/java/eclipse-config.gradle"
